Terminals unused in grammar

   RESERVED


State 118 conflicts: 13 shift/reduce
State 136 conflicts: 13 shift/reduce
State 137 conflicts: 13 shift/reduce
State 138 conflicts: 13 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: ClassDecl OBRACE ProgramAux CBRACE

    2 ProgramAux: ProgramAux ProgramL
    3           | %empty

    4 ProgramL: FieldDecl
    5         | MethodDecl
    6         | SEMI

    7 ClassDecl: CLASS ID

    8 FieldDecl: PUBLIC STATIC Type ID CommaId SEMI
    9          | error SEMI

   10 CommaId: CommaId COMMA ID
   11        | %empty

   12 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

   13 MethodHeader: Type ID OCURV FormalParams CCURV
   14             | Type ID OCURV CCURV
   15             | VOID ID OCURV FormalParams CCURV
   16             | VOID ID OCURV CCURV

   17 FormalParams: Type ID FormalParamsAux
   18             | STRING OSQUARE CSQUARE ID

   19 FormalParamsAux: COMMA Type ID FormalParamsAux
   20                | %empty

   21 MethodBody: OBRACE MethodBodyAux CBRACE

   22 MethodBodyAux: MethodBodyAux MethodBodyL
   23              | %empty

   24 MethodBodyL: VarDecl
   25            | Statement

   26 VarDecl: Type ID CommaId SEMI

   27 Type: BOOL
   28     | INT
   29     | DOUBLE

   30 Statement: OBRACE StatementEmpty CBRACE
   31          | IF OCURV Expr CCURV Statement
   32          | IF OCURV Expr CCURV Statement ELSE Statement
   33          | WHILE OCURV Expr CCURV Statement
   34          | DO Statement WHILE OCURV Expr CCURV SEMI
   35          | PRINT OCURV Expr CCURV SEMI
   36          | PRINT OCURV STRLIT CCURV SEMI
   37          | StatementAux SEMI
   38          | RETURN ExprOptional SEMI
   39          | error SEMI

   40 StatementEmpty: StatementL Statement
   41               | %empty

   42 ExprOptional: Expr
   43             | %empty

   44 StatementAux: StatementL
   45             | %empty

   46 StatementL: Assignment
   47           | MethodInvocation
   48           | ParseArgs

   49 Assignment: ID ASSIGN Expr

   50 MethodInvocation: ID OCURV MethodInvAux CCURV

   51 MethodInvAux: Expr CommaExpr
   52             | %empty

   53 CommaExpr: CommaExpr COMMA Expr
   54          | %empty

   55 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE CCURV
   56          | PARSEINT OCURV error CCURV

   57 Expr: StatementL
   58     | Expr ExprLogic Expr
   59     | Expr ExprCompare Expr
   60     | Expr ExprOperators Expr
   61     | ExprSign Expr
   62     | ID ExprDotLen
   63     | OCURV Expr CCURV
   64     | ExprLit
   65     | OCURV error CCURV

   66 ExprLogic: AND
   67          | OR

   68 ExprCompare: EQ
   69            | GEQ
   70            | GT
   71            | LEQ
   72            | LT
   73            | NEQ

   74 ExprOperators: PLUS
   75              | MINUS
   76              | STAR
   77              | DIV
   78              | MOD

   79 ExprDotLen: DOTLENGTH
   80           | %empty

   81 ExprLit: BOOLLIT
   82        | DECLIT
   83        | REALLIT

   84 ExprSign: PLUS
   85         | MINUS
   86         | NOT


Terminals, with rules where they appear

$end (0) 0
error (256) 9 39 56 65
BOOL (258) 27
BOOLLIT (259) 81
CLASS (260) 7
DO (261) 34
DOTLENGTH (262) 79
DOUBLE (263) 29
ELSE (264) 32
IF (265) 31 32
INT (266) 28
PARSEINT (267) 55 56
PRINT (268) 35 36
PUBLIC (269) 8 12
RETURN (270) 38
STATIC (271) 8 12
STRING (272) 18
VOID (273) 15 16
WHILE (274) 33 34
OCURV (275) 13 14 15 16 31 32 33 34 35 36 50 55 56 63 65
CCURV (276) 13 14 15 16 31 32 33 34 35 36 50 55 56 63 65
OBRACE (277) 1 21 30
CBRACE (278) 1 21 30
OSQUARE (279) 18 55
CSQUARE (280) 18 55
AND (281) 66
OR (282) 67
LT (283) 72
GT (284) 70
EQ (285) 68
NEQ (286) 73
LEQ (287) 71
GEQ (288) 69
PLUS (289) 74 84
MINUS (290) 75 85
STAR (291) 76
DIV (292) 77
MOD (293) 78
NOT (294) 86
ASSIGN (295) 49
SEMI (296) 6 8 9 26 34 35 36 37 38 39
COMMA (297) 10 19 53
RESERVED (298)
STRLIT (299) 36
ID (300) 7 8 10 13 14 15 16 17 18 19 26 49 50 55 62
DECLIT (301) 82
REALLIT (302) 83
NO_ELSE (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
Program (50)
    on left: 1, on right: 0
ProgramAux (51)
    on left: 2 3, on right: 1 2
ProgramL (52)
    on left: 4 5 6, on right: 2
ClassDecl (53)
    on left: 7, on right: 1
FieldDecl (54)
    on left: 8 9, on right: 4
CommaId (55)
    on left: 10 11, on right: 8 10 26
MethodDecl (56)
    on left: 12, on right: 5
MethodHeader (57)
    on left: 13 14 15 16, on right: 12
FormalParams (58)
    on left: 17 18, on right: 13 15
FormalParamsAux (59)
    on left: 19 20, on right: 17 19
MethodBody (60)
    on left: 21, on right: 12
MethodBodyAux (61)
    on left: 22 23, on right: 21 22
MethodBodyL (62)
    on left: 24 25, on right: 22
VarDecl (63)
    on left: 26, on right: 24
Type (64)
    on left: 27 28 29, on right: 8 13 14 17 19 26
Statement (65)
    on left: 30 31 32 33 34 35 36 37 38 39, on right: 25 31 32 33 34
    40
StatementEmpty (66)
    on left: 40 41, on right: 30
ExprOptional (67)
    on left: 42 43, on right: 38
StatementAux (68)
    on left: 44 45, on right: 37
StatementL (69)
    on left: 46 47 48, on right: 40 44 57
Assignment (70)
    on left: 49, on right: 46
MethodInvocation (71)
    on left: 50, on right: 47
MethodInvAux (72)
    on left: 51 52, on right: 50
CommaExpr (73)
    on left: 53 54, on right: 51 53
ParseArgs (74)
    on left: 55 56, on right: 48
Expr (75)
    on left: 57 58 59 60 61 62 63 64 65, on right: 31 32 33 34 35 42
    49 51 53 55 58 59 60 61 63
ExprLogic (76)
    on left: 66 67, on right: 58
ExprCompare (77)
    on left: 68 69 70 71 72 73, on right: 59
ExprOperators (78)
    on left: 74 75 76 77 78, on right: 60
ExprDotLen (79)
    on left: 79 80, on right: 62
ExprLit (80)
    on left: 81 82 83, on right: 64
ExprSign (81)
    on left: 84 85 86, on right: 61


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program    go to state 2
    ClassDecl  go to state 3


State 1

    7 ClassDecl: CLASS . ID

    ID  shift, and go to state 4


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 5


State 3

    1 Program: ClassDecl . OBRACE ProgramAux CBRACE

    OBRACE  shift, and go to state 6


State 4

    7 ClassDecl: CLASS ID .

    $default  reduce using rule 7 (ClassDecl)


State 5

    0 $accept: Program $end .

    $default  accept


State 6

    1 Program: ClassDecl OBRACE . ProgramAux CBRACE

    $default  reduce using rule 3 (ProgramAux)

    ProgramAux  go to state 7


State 7

    1 Program: ClassDecl OBRACE ProgramAux . CBRACE
    2 ProgramAux: ProgramAux . ProgramL

    error   shift, and go to state 8
    PUBLIC  shift, and go to state 9
    CBRACE  shift, and go to state 10
    SEMI    shift, and go to state 11

    ProgramL    go to state 12
    FieldDecl   go to state 13
    MethodDecl  go to state 14


State 8

    9 FieldDecl: error . SEMI

    SEMI  shift, and go to state 15


State 9

    8 FieldDecl: PUBLIC . STATIC Type ID CommaId SEMI
   12 MethodDecl: PUBLIC . STATIC MethodHeader MethodBody

    STATIC  shift, and go to state 16


State 10

    1 Program: ClassDecl OBRACE ProgramAux CBRACE .

    $default  reduce using rule 1 (Program)


State 11

    6 ProgramL: SEMI .

    $default  reduce using rule 6 (ProgramL)


State 12

    2 ProgramAux: ProgramAux ProgramL .

    $default  reduce using rule 2 (ProgramAux)


State 13

    4 ProgramL: FieldDecl .

    $default  reduce using rule 4 (ProgramL)


State 14

    5 ProgramL: MethodDecl .

    $default  reduce using rule 5 (ProgramL)


State 15

    9 FieldDecl: error SEMI .

    $default  reduce using rule 9 (FieldDecl)


State 16

    8 FieldDecl: PUBLIC STATIC . Type ID CommaId SEMI
   12 MethodDecl: PUBLIC STATIC . MethodHeader MethodBody

    BOOL    shift, and go to state 17
    DOUBLE  shift, and go to state 18
    INT     shift, and go to state 19
    VOID    shift, and go to state 20

    MethodHeader  go to state 21
    Type          go to state 22


State 17

   27 Type: BOOL .

    $default  reduce using rule 27 (Type)


State 18

   29 Type: DOUBLE .

    $default  reduce using rule 29 (Type)


State 19

   28 Type: INT .

    $default  reduce using rule 28 (Type)


State 20

   15 MethodHeader: VOID . ID OCURV FormalParams CCURV
   16             | VOID . ID OCURV CCURV

    ID  shift, and go to state 23


State 21

   12 MethodDecl: PUBLIC STATIC MethodHeader . MethodBody

    OBRACE  shift, and go to state 24

    MethodBody  go to state 25


State 22

    8 FieldDecl: PUBLIC STATIC Type . ID CommaId SEMI
   13 MethodHeader: Type . ID OCURV FormalParams CCURV
   14             | Type . ID OCURV CCURV

    ID  shift, and go to state 26


State 23

   15 MethodHeader: VOID ID . OCURV FormalParams CCURV
   16             | VOID ID . OCURV CCURV

    OCURV  shift, and go to state 27


State 24

   21 MethodBody: OBRACE . MethodBodyAux CBRACE

    $default  reduce using rule 23 (MethodBodyAux)

    MethodBodyAux  go to state 28


State 25

   12 MethodDecl: PUBLIC STATIC MethodHeader MethodBody .

    $default  reduce using rule 12 (MethodDecl)


State 26

    8 FieldDecl: PUBLIC STATIC Type ID . CommaId SEMI
   13 MethodHeader: Type ID . OCURV FormalParams CCURV
   14             | Type ID . OCURV CCURV

    OCURV  shift, and go to state 29

    $default  reduce using rule 11 (CommaId)

    CommaId  go to state 30


State 27

   15 MethodHeader: VOID ID OCURV . FormalParams CCURV
   16             | VOID ID OCURV . CCURV

    BOOL    shift, and go to state 17
    DOUBLE  shift, and go to state 18
    INT     shift, and go to state 19
    STRING  shift, and go to state 31
    CCURV   shift, and go to state 32

    FormalParams  go to state 33
    Type          go to state 34


State 28

   21 MethodBody: OBRACE MethodBodyAux . CBRACE
   22 MethodBodyAux: MethodBodyAux . MethodBodyL

    error     shift, and go to state 35
    BOOL      shift, and go to state 17
    DO        shift, and go to state 36
    DOUBLE    shift, and go to state 18
    IF        shift, and go to state 37
    INT       shift, and go to state 19
    PARSEINT  shift, and go to state 38
    PRINT     shift, and go to state 39
    RETURN    shift, and go to state 40
    WHILE     shift, and go to state 41
    OBRACE    shift, and go to state 42
    CBRACE    shift, and go to state 43
    ID        shift, and go to state 44

    SEMI  reduce using rule 45 (StatementAux)

    MethodBodyL       go to state 45
    VarDecl           go to state 46
    Type              go to state 47
    Statement         go to state 48
    StatementAux      go to state 49
    StatementL        go to state 50
    Assignment        go to state 51
    MethodInvocation  go to state 52
    ParseArgs         go to state 53


State 29

   13 MethodHeader: Type ID OCURV . FormalParams CCURV
   14             | Type ID OCURV . CCURV

    BOOL    shift, and go to state 17
    DOUBLE  shift, and go to state 18
    INT     shift, and go to state 19
    STRING  shift, and go to state 31
    CCURV   shift, and go to state 54

    FormalParams  go to state 55
    Type          go to state 34


State 30

    8 FieldDecl: PUBLIC STATIC Type ID CommaId . SEMI
   10 CommaId: CommaId . COMMA ID

    SEMI   shift, and go to state 56
    COMMA  shift, and go to state 57


State 31

   18 FormalParams: STRING . OSQUARE CSQUARE ID

    OSQUARE  shift, and go to state 58


State 32

   16 MethodHeader: VOID ID OCURV CCURV .

    $default  reduce using rule 16 (MethodHeader)


State 33

   15 MethodHeader: VOID ID OCURV FormalParams . CCURV

    CCURV  shift, and go to state 59


State 34

   17 FormalParams: Type . ID FormalParamsAux

    ID  shift, and go to state 60


State 35

   39 Statement: error . SEMI

    SEMI  shift, and go to state 61


State 36

   34 Statement: DO . Statement WHILE OCURV Expr CCURV SEMI

    error     shift, and go to state 35
    DO        shift, and go to state 36
    IF        shift, and go to state 37
    PARSEINT  shift, and go to state 38
    PRINT     shift, and go to state 39
    RETURN    shift, and go to state 40
    WHILE     shift, and go to state 41
    OBRACE    shift, and go to state 42
    ID        shift, and go to state 44

    SEMI  reduce using rule 45 (StatementAux)

    Statement         go to state 62
    StatementAux      go to state 49
    StatementL        go to state 50
    Assignment        go to state 51
    MethodInvocation  go to state 52
    ParseArgs         go to state 53


State 37

   31 Statement: IF . OCURV Expr CCURV Statement
   32          | IF . OCURV Expr CCURV Statement ELSE Statement

    OCURV  shift, and go to state 63


State 38

   55 ParseArgs: PARSEINT . OCURV ID OSQUARE Expr CSQUARE CCURV
   56          | PARSEINT . OCURV error CCURV

    OCURV  shift, and go to state 64


State 39

   35 Statement: PRINT . OCURV Expr CCURV SEMI
   36          | PRINT . OCURV STRLIT CCURV SEMI

    OCURV  shift, and go to state 65


State 40

   38 Statement: RETURN . ExprOptional SEMI

    BOOLLIT   shift, and go to state 66
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 67
    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69
    NOT       shift, and go to state 70
    ID        shift, and go to state 71
    DECLIT    shift, and go to state 72
    REALLIT   shift, and go to state 73

    $default  reduce using rule 43 (ExprOptional)

    ExprOptional      go to state 74
    StatementL        go to state 75
    Assignment        go to state 51
    MethodInvocation  go to state 52
    ParseArgs         go to state 53
    Expr              go to state 76
    ExprLit           go to state 77
    ExprSign          go to state 78


State 41

   33 Statement: WHILE . OCURV Expr CCURV Statement

    OCURV  shift, and go to state 79


State 42

   30 Statement: OBRACE . StatementEmpty CBRACE

    PARSEINT  shift, and go to state 38
    ID        shift, and go to state 44

    $default  reduce using rule 41 (StatementEmpty)

    StatementEmpty    go to state 80
    StatementL        go to state 81
    Assignment        go to state 51
    MethodInvocation  go to state 52
    ParseArgs         go to state 53


State 43

   21 MethodBody: OBRACE MethodBodyAux CBRACE .

    $default  reduce using rule 21 (MethodBody)


State 44

   49 Assignment: ID . ASSIGN Expr
   50 MethodInvocation: ID . OCURV MethodInvAux CCURV

    OCURV   shift, and go to state 82
    ASSIGN  shift, and go to state 83


State 45

   22 MethodBodyAux: MethodBodyAux MethodBodyL .

    $default  reduce using rule 22 (MethodBodyAux)


State 46

   24 MethodBodyL: VarDecl .

    $default  reduce using rule 24 (MethodBodyL)


State 47

   26 VarDecl: Type . ID CommaId SEMI

    ID  shift, and go to state 84


State 48

   25 MethodBodyL: Statement .

    $default  reduce using rule 25 (MethodBodyL)


State 49

   37 Statement: StatementAux . SEMI

    SEMI  shift, and go to state 85


State 50

   44 StatementAux: StatementL .

    $default  reduce using rule 44 (StatementAux)


State 51

   46 StatementL: Assignment .

    $default  reduce using rule 46 (StatementL)


State 52

   47 StatementL: MethodInvocation .

    $default  reduce using rule 47 (StatementL)


State 53

   48 StatementL: ParseArgs .

    $default  reduce using rule 48 (StatementL)


State 54

   14 MethodHeader: Type ID OCURV CCURV .

    $default  reduce using rule 14 (MethodHeader)


State 55

   13 MethodHeader: Type ID OCURV FormalParams . CCURV

    CCURV  shift, and go to state 86


State 56

    8 FieldDecl: PUBLIC STATIC Type ID CommaId SEMI .

    $default  reduce using rule 8 (FieldDecl)


State 57

   10 CommaId: CommaId COMMA . ID

    ID  shift, and go to state 87


State 58

   18 FormalParams: STRING OSQUARE . CSQUARE ID

    CSQUARE  shift, and go to state 88


State 59

   15 MethodHeader: VOID ID OCURV FormalParams CCURV .

    $default  reduce using rule 15 (MethodHeader)


State 60

   17 FormalParams: Type ID . FormalParamsAux

    COMMA  shift, and go to state 89

    $default  reduce using rule 20 (FormalParamsAux)

    FormalParamsAux  go to state 90


State 61

   39 Statement: error SEMI .

    $default  reduce using rule 39 (Statement)


State 62

   34 Statement: DO Statement . WHILE OCURV Expr CCURV SEMI

    WHILE  shift, and go to state 91


State 63

   31 Statement: IF OCURV . Expr CCURV Statement
   32          | IF OCURV . Expr CCURV Statement ELSE Statement

    BOOLLIT   shift, and go to state 66
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 67
    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69
    NOT       shift, and go to state 70
    ID        shift, and go to state 71
    DECLIT    shift, and go to state 72
    REALLIT   shift, and go to state 73

    StatementL        go to state 75
    Assignment        go to state 51
    MethodInvocation  go to state 52
    ParseArgs         go to state 53
    Expr              go to state 92
    ExprLit           go to state 77
    ExprSign          go to state 78


State 64

   55 ParseArgs: PARSEINT OCURV . ID OSQUARE Expr CSQUARE CCURV
   56          | PARSEINT OCURV . error CCURV

    error  shift, and go to state 93
    ID     shift, and go to state 94


State 65

   35 Statement: PRINT OCURV . Expr CCURV SEMI
   36          | PRINT OCURV . STRLIT CCURV SEMI

    BOOLLIT   shift, and go to state 66
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 67
    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69
    NOT       shift, and go to state 70
    STRLIT    shift, and go to state 95
    ID        shift, and go to state 71
    DECLIT    shift, and go to state 72
    REALLIT   shift, and go to state 73

    StatementL        go to state 75
    Assignment        go to state 51
    MethodInvocation  go to state 52
    ParseArgs         go to state 53
    Expr              go to state 96
    ExprLit           go to state 77
    ExprSign          go to state 78


State 66

   81 ExprLit: BOOLLIT .

    $default  reduce using rule 81 (ExprLit)


State 67

   63 Expr: OCURV . Expr CCURV
   65     | OCURV . error CCURV

    error     shift, and go to state 97
    BOOLLIT   shift, and go to state 66
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 67
    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69
    NOT       shift, and go to state 70
    ID        shift, and go to state 71
    DECLIT    shift, and go to state 72
    REALLIT   shift, and go to state 73

    StatementL        go to state 75
    Assignment        go to state 51
    MethodInvocation  go to state 52
    ParseArgs         go to state 53
    Expr              go to state 98
    ExprLit           go to state 77
    ExprSign          go to state 78


State 68

   84 ExprSign: PLUS .

    $default  reduce using rule 84 (ExprSign)


State 69

   85 ExprSign: MINUS .

    $default  reduce using rule 85 (ExprSign)


State 70

   86 ExprSign: NOT .

    $default  reduce using rule 86 (ExprSign)


State 71

   49 Assignment: ID . ASSIGN Expr
   50 MethodInvocation: ID . OCURV MethodInvAux CCURV
   62 Expr: ID . ExprDotLen

    DOTLENGTH  shift, and go to state 99
    OCURV      shift, and go to state 82
    ASSIGN     shift, and go to state 83

    $default  reduce using rule 80 (ExprDotLen)

    ExprDotLen  go to state 100


State 72

   82 ExprLit: DECLIT .

    $default  reduce using rule 82 (ExprLit)


State 73

   83 ExprLit: REALLIT .

    $default  reduce using rule 83 (ExprLit)


State 74

   38 Statement: RETURN ExprOptional . SEMI

    SEMI  shift, and go to state 101


State 75

   57 Expr: StatementL .

    $default  reduce using rule 57 (Expr)


State 76

   42 ExprOptional: Expr .
   58 Expr: Expr . ExprLogic Expr
   59     | Expr . ExprCompare Expr
   60     | Expr . ExprOperators Expr

    AND    shift, and go to state 102
    OR     shift, and go to state 103
    LT     shift, and go to state 104
    GT     shift, and go to state 105
    EQ     shift, and go to state 106
    NEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    GEQ    shift, and go to state 109
    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111
    STAR   shift, and go to state 112
    DIV    shift, and go to state 113
    MOD    shift, and go to state 114

    $default  reduce using rule 42 (ExprOptional)

    ExprLogic      go to state 115
    ExprCompare    go to state 116
    ExprOperators  go to state 117


State 77

   64 Expr: ExprLit .

    $default  reduce using rule 64 (Expr)


State 78

   61 Expr: ExprSign . Expr

    BOOLLIT   shift, and go to state 66
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 67
    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69
    NOT       shift, and go to state 70
    ID        shift, and go to state 71
    DECLIT    shift, and go to state 72
    REALLIT   shift, and go to state 73

    StatementL        go to state 75
    Assignment        go to state 51
    MethodInvocation  go to state 52
    ParseArgs         go to state 53
    Expr              go to state 118
    ExprLit           go to state 77
    ExprSign          go to state 78


State 79

   33 Statement: WHILE OCURV . Expr CCURV Statement

    BOOLLIT   shift, and go to state 66
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 67
    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69
    NOT       shift, and go to state 70
    ID        shift, and go to state 71
    DECLIT    shift, and go to state 72
    REALLIT   shift, and go to state 73

    StatementL        go to state 75
    Assignment        go to state 51
    MethodInvocation  go to state 52
    ParseArgs         go to state 53
    Expr              go to state 119
    ExprLit           go to state 77
    ExprSign          go to state 78


State 80

   30 Statement: OBRACE StatementEmpty . CBRACE

    CBRACE  shift, and go to state 120


State 81

   40 StatementEmpty: StatementL . Statement

    error     shift, and go to state 35
    DO        shift, and go to state 36
    IF        shift, and go to state 37
    PARSEINT  shift, and go to state 38
    PRINT     shift, and go to state 39
    RETURN    shift, and go to state 40
    WHILE     shift, and go to state 41
    OBRACE    shift, and go to state 42
    ID        shift, and go to state 44

    SEMI  reduce using rule 45 (StatementAux)

    Statement         go to state 121
    StatementAux      go to state 49
    StatementL        go to state 50
    Assignment        go to state 51
    MethodInvocation  go to state 52
    ParseArgs         go to state 53


State 82

   50 MethodInvocation: ID OCURV . MethodInvAux CCURV

    BOOLLIT   shift, and go to state 66
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 67
    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69
    NOT       shift, and go to state 70
    ID        shift, and go to state 71
    DECLIT    shift, and go to state 72
    REALLIT   shift, and go to state 73

    $default  reduce using rule 52 (MethodInvAux)

    StatementL        go to state 75
    Assignment        go to state 51
    MethodInvocation  go to state 52
    MethodInvAux      go to state 122
    ParseArgs         go to state 53
    Expr              go to state 123
    ExprLit           go to state 77
    ExprSign          go to state 78


State 83

   49 Assignment: ID ASSIGN . Expr

    BOOLLIT   shift, and go to state 66
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 67
    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69
    NOT       shift, and go to state 70
    ID        shift, and go to state 71
    DECLIT    shift, and go to state 72
    REALLIT   shift, and go to state 73

    StatementL        go to state 75
    Assignment        go to state 51
    MethodInvocation  go to state 52
    ParseArgs         go to state 53
    Expr              go to state 124
    ExprLit           go to state 77
    ExprSign          go to state 78


State 84

   26 VarDecl: Type ID . CommaId SEMI

    $default  reduce using rule 11 (CommaId)

    CommaId  go to state 125


State 85

   37 Statement: StatementAux SEMI .

    $default  reduce using rule 37 (Statement)


State 86

   13 MethodHeader: Type ID OCURV FormalParams CCURV .

    $default  reduce using rule 13 (MethodHeader)


State 87

   10 CommaId: CommaId COMMA ID .

    $default  reduce using rule 10 (CommaId)


State 88

   18 FormalParams: STRING OSQUARE CSQUARE . ID

    ID  shift, and go to state 126


State 89

   19 FormalParamsAux: COMMA . Type ID FormalParamsAux

    BOOL    shift, and go to state 17
    DOUBLE  shift, and go to state 18
    INT     shift, and go to state 19

    Type  go to state 127


State 90

   17 FormalParams: Type ID FormalParamsAux .

    $default  reduce using rule 17 (FormalParams)


State 91

   34 Statement: DO Statement WHILE . OCURV Expr CCURV SEMI

    OCURV  shift, and go to state 128


State 92

   31 Statement: IF OCURV Expr . CCURV Statement
   32          | IF OCURV Expr . CCURV Statement ELSE Statement
   58 Expr: Expr . ExprLogic Expr
   59     | Expr . ExprCompare Expr
   60     | Expr . ExprOperators Expr

    CCURV  shift, and go to state 129
    AND    shift, and go to state 102
    OR     shift, and go to state 103
    LT     shift, and go to state 104
    GT     shift, and go to state 105
    EQ     shift, and go to state 106
    NEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    GEQ    shift, and go to state 109
    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111
    STAR   shift, and go to state 112
    DIV    shift, and go to state 113
    MOD    shift, and go to state 114

    ExprLogic      go to state 115
    ExprCompare    go to state 116
    ExprOperators  go to state 117


State 93

   56 ParseArgs: PARSEINT OCURV error . CCURV

    CCURV  shift, and go to state 130


State 94

   55 ParseArgs: PARSEINT OCURV ID . OSQUARE Expr CSQUARE CCURV

    OSQUARE  shift, and go to state 131


State 95

   36 Statement: PRINT OCURV STRLIT . CCURV SEMI

    CCURV  shift, and go to state 132


State 96

   35 Statement: PRINT OCURV Expr . CCURV SEMI
   58 Expr: Expr . ExprLogic Expr
   59     | Expr . ExprCompare Expr
   60     | Expr . ExprOperators Expr

    CCURV  shift, and go to state 133
    AND    shift, and go to state 102
    OR     shift, and go to state 103
    LT     shift, and go to state 104
    GT     shift, and go to state 105
    EQ     shift, and go to state 106
    NEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    GEQ    shift, and go to state 109
    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111
    STAR   shift, and go to state 112
    DIV    shift, and go to state 113
    MOD    shift, and go to state 114

    ExprLogic      go to state 115
    ExprCompare    go to state 116
    ExprOperators  go to state 117


State 97

   65 Expr: OCURV error . CCURV

    CCURV  shift, and go to state 134


State 98

   58 Expr: Expr . ExprLogic Expr
   59     | Expr . ExprCompare Expr
   60     | Expr . ExprOperators Expr
   63     | OCURV Expr . CCURV

    CCURV  shift, and go to state 135
    AND    shift, and go to state 102
    OR     shift, and go to state 103
    LT     shift, and go to state 104
    GT     shift, and go to state 105
    EQ     shift, and go to state 106
    NEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    GEQ    shift, and go to state 109
    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111
    STAR   shift, and go to state 112
    DIV    shift, and go to state 113
    MOD    shift, and go to state 114

    ExprLogic      go to state 115
    ExprCompare    go to state 116
    ExprOperators  go to state 117


State 99

   79 ExprDotLen: DOTLENGTH .

    $default  reduce using rule 79 (ExprDotLen)


State 100

   62 Expr: ID ExprDotLen .

    $default  reduce using rule 62 (Expr)


State 101

   38 Statement: RETURN ExprOptional SEMI .

    $default  reduce using rule 38 (Statement)


State 102

   66 ExprLogic: AND .

    $default  reduce using rule 66 (ExprLogic)


State 103

   67 ExprLogic: OR .

    $default  reduce using rule 67 (ExprLogic)


State 104

   72 ExprCompare: LT .

    $default  reduce using rule 72 (ExprCompare)


State 105

   70 ExprCompare: GT .

    $default  reduce using rule 70 (ExprCompare)


State 106

   68 ExprCompare: EQ .

    $default  reduce using rule 68 (ExprCompare)


State 107

   73 ExprCompare: NEQ .

    $default  reduce using rule 73 (ExprCompare)


State 108

   71 ExprCompare: LEQ .

    $default  reduce using rule 71 (ExprCompare)


State 109

   69 ExprCompare: GEQ .

    $default  reduce using rule 69 (ExprCompare)


State 110

   74 ExprOperators: PLUS .

    $default  reduce using rule 74 (ExprOperators)


State 111

   75 ExprOperators: MINUS .

    $default  reduce using rule 75 (ExprOperators)


State 112

   76 ExprOperators: STAR .

    $default  reduce using rule 76 (ExprOperators)


State 113

   77 ExprOperators: DIV .

    $default  reduce using rule 77 (ExprOperators)


State 114

   78 ExprOperators: MOD .

    $default  reduce using rule 78 (ExprOperators)


State 115

   58 Expr: Expr ExprLogic . Expr

    BOOLLIT   shift, and go to state 66
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 67
    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69
    NOT       shift, and go to state 70
    ID        shift, and go to state 71
    DECLIT    shift, and go to state 72
    REALLIT   shift, and go to state 73

    StatementL        go to state 75
    Assignment        go to state 51
    MethodInvocation  go to state 52
    ParseArgs         go to state 53
    Expr              go to state 136
    ExprLit           go to state 77
    ExprSign          go to state 78


State 116

   59 Expr: Expr ExprCompare . Expr

    BOOLLIT   shift, and go to state 66
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 67
    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69
    NOT       shift, and go to state 70
    ID        shift, and go to state 71
    DECLIT    shift, and go to state 72
    REALLIT   shift, and go to state 73

    StatementL        go to state 75
    Assignment        go to state 51
    MethodInvocation  go to state 52
    ParseArgs         go to state 53
    Expr              go to state 137
    ExprLit           go to state 77
    ExprSign          go to state 78


State 117

   60 Expr: Expr ExprOperators . Expr

    BOOLLIT   shift, and go to state 66
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 67
    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69
    NOT       shift, and go to state 70
    ID        shift, and go to state 71
    DECLIT    shift, and go to state 72
    REALLIT   shift, and go to state 73

    StatementL        go to state 75
    Assignment        go to state 51
    MethodInvocation  go to state 52
    ParseArgs         go to state 53
    Expr              go to state 138
    ExprLit           go to state 77
    ExprSign          go to state 78


State 118

   58 Expr: Expr . ExprLogic Expr
   59     | Expr . ExprCompare Expr
   60     | Expr . ExprOperators Expr
   61     | ExprSign Expr .

    AND    shift, and go to state 102
    OR     shift, and go to state 103
    LT     shift, and go to state 104
    GT     shift, and go to state 105
    EQ     shift, and go to state 106
    NEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    GEQ    shift, and go to state 109
    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111
    STAR   shift, and go to state 112
    DIV    shift, and go to state 113
    MOD    shift, and go to state 114

    AND       [reduce using rule 61 (Expr)]
    OR        [reduce using rule 61 (Expr)]
    LT        [reduce using rule 61 (Expr)]
    GT        [reduce using rule 61 (Expr)]
    EQ        [reduce using rule 61 (Expr)]
    NEQ       [reduce using rule 61 (Expr)]
    LEQ       [reduce using rule 61 (Expr)]
    GEQ       [reduce using rule 61 (Expr)]
    PLUS      [reduce using rule 61 (Expr)]
    MINUS     [reduce using rule 61 (Expr)]
    STAR      [reduce using rule 61 (Expr)]
    DIV       [reduce using rule 61 (Expr)]
    MOD       [reduce using rule 61 (Expr)]
    $default  reduce using rule 61 (Expr)

    ExprLogic      go to state 115
    ExprCompare    go to state 116
    ExprOperators  go to state 117


State 119

   33 Statement: WHILE OCURV Expr . CCURV Statement
   58 Expr: Expr . ExprLogic Expr
   59     | Expr . ExprCompare Expr
   60     | Expr . ExprOperators Expr

    CCURV  shift, and go to state 139
    AND    shift, and go to state 102
    OR     shift, and go to state 103
    LT     shift, and go to state 104
    GT     shift, and go to state 105
    EQ     shift, and go to state 106
    NEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    GEQ    shift, and go to state 109
    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111
    STAR   shift, and go to state 112
    DIV    shift, and go to state 113
    MOD    shift, and go to state 114

    ExprLogic      go to state 115
    ExprCompare    go to state 116
    ExprOperators  go to state 117


State 120

   30 Statement: OBRACE StatementEmpty CBRACE .

    $default  reduce using rule 30 (Statement)


State 121

   40 StatementEmpty: StatementL Statement .

    $default  reduce using rule 40 (StatementEmpty)


State 122

   50 MethodInvocation: ID OCURV MethodInvAux . CCURV

    CCURV  shift, and go to state 140


State 123

   51 MethodInvAux: Expr . CommaExpr
   58 Expr: Expr . ExprLogic Expr
   59     | Expr . ExprCompare Expr
   60     | Expr . ExprOperators Expr

    AND    shift, and go to state 102
    OR     shift, and go to state 103
    LT     shift, and go to state 104
    GT     shift, and go to state 105
    EQ     shift, and go to state 106
    NEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    GEQ    shift, and go to state 109
    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111
    STAR   shift, and go to state 112
    DIV    shift, and go to state 113
    MOD    shift, and go to state 114

    $default  reduce using rule 54 (CommaExpr)

    CommaExpr      go to state 141
    ExprLogic      go to state 115
    ExprCompare    go to state 116
    ExprOperators  go to state 117


State 124

   49 Assignment: ID ASSIGN Expr .
   58 Expr: Expr . ExprLogic Expr
   59     | Expr . ExprCompare Expr
   60     | Expr . ExprOperators Expr

    AND    shift, and go to state 102
    OR     shift, and go to state 103
    LT     shift, and go to state 104
    GT     shift, and go to state 105
    EQ     shift, and go to state 106
    NEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    GEQ    shift, and go to state 109
    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111
    STAR   shift, and go to state 112
    DIV    shift, and go to state 113
    MOD    shift, and go to state 114

    $default  reduce using rule 49 (Assignment)

    ExprLogic      go to state 115
    ExprCompare    go to state 116
    ExprOperators  go to state 117


State 125

   10 CommaId: CommaId . COMMA ID
   26 VarDecl: Type ID CommaId . SEMI

    SEMI   shift, and go to state 142
    COMMA  shift, and go to state 57


State 126

   18 FormalParams: STRING OSQUARE CSQUARE ID .

    $default  reduce using rule 18 (FormalParams)


State 127

   19 FormalParamsAux: COMMA Type . ID FormalParamsAux

    ID  shift, and go to state 143


State 128

   34 Statement: DO Statement WHILE OCURV . Expr CCURV SEMI

    BOOLLIT   shift, and go to state 66
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 67
    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69
    NOT       shift, and go to state 70
    ID        shift, and go to state 71
    DECLIT    shift, and go to state 72
    REALLIT   shift, and go to state 73

    StatementL        go to state 75
    Assignment        go to state 51
    MethodInvocation  go to state 52
    ParseArgs         go to state 53
    Expr              go to state 144
    ExprLit           go to state 77
    ExprSign          go to state 78


State 129

   31 Statement: IF OCURV Expr CCURV . Statement
   32          | IF OCURV Expr CCURV . Statement ELSE Statement

    error     shift, and go to state 35
    DO        shift, and go to state 36
    IF        shift, and go to state 37
    PARSEINT  shift, and go to state 38
    PRINT     shift, and go to state 39
    RETURN    shift, and go to state 40
    WHILE     shift, and go to state 41
    OBRACE    shift, and go to state 42
    ID        shift, and go to state 44

    SEMI  reduce using rule 45 (StatementAux)

    Statement         go to state 145
    StatementAux      go to state 49
    StatementL        go to state 50
    Assignment        go to state 51
    MethodInvocation  go to state 52
    ParseArgs         go to state 53


State 130

   56 ParseArgs: PARSEINT OCURV error CCURV .

    $default  reduce using rule 56 (ParseArgs)


State 131

   55 ParseArgs: PARSEINT OCURV ID OSQUARE . Expr CSQUARE CCURV

    BOOLLIT   shift, and go to state 66
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 67
    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69
    NOT       shift, and go to state 70
    ID        shift, and go to state 71
    DECLIT    shift, and go to state 72
    REALLIT   shift, and go to state 73

    StatementL        go to state 75
    Assignment        go to state 51
    MethodInvocation  go to state 52
    ParseArgs         go to state 53
    Expr              go to state 146
    ExprLit           go to state 77
    ExprSign          go to state 78


State 132

   36 Statement: PRINT OCURV STRLIT CCURV . SEMI

    SEMI  shift, and go to state 147


State 133

   35 Statement: PRINT OCURV Expr CCURV . SEMI

    SEMI  shift, and go to state 148


State 134

   65 Expr: OCURV error CCURV .

    $default  reduce using rule 65 (Expr)


State 135

   63 Expr: OCURV Expr CCURV .

    $default  reduce using rule 63 (Expr)


State 136

   58 Expr: Expr . ExprLogic Expr
   58     | Expr ExprLogic Expr .
   59     | Expr . ExprCompare Expr
   60     | Expr . ExprOperators Expr

    AND    shift, and go to state 102
    OR     shift, and go to state 103
    LT     shift, and go to state 104
    GT     shift, and go to state 105
    EQ     shift, and go to state 106
    NEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    GEQ    shift, and go to state 109
    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111
    STAR   shift, and go to state 112
    DIV    shift, and go to state 113
    MOD    shift, and go to state 114

    AND       [reduce using rule 58 (Expr)]
    OR        [reduce using rule 58 (Expr)]
    LT        [reduce using rule 58 (Expr)]
    GT        [reduce using rule 58 (Expr)]
    EQ        [reduce using rule 58 (Expr)]
    NEQ       [reduce using rule 58 (Expr)]
    LEQ       [reduce using rule 58 (Expr)]
    GEQ       [reduce using rule 58 (Expr)]
    PLUS      [reduce using rule 58 (Expr)]
    MINUS     [reduce using rule 58 (Expr)]
    STAR      [reduce using rule 58 (Expr)]
    DIV       [reduce using rule 58 (Expr)]
    MOD       [reduce using rule 58 (Expr)]
    $default  reduce using rule 58 (Expr)

    ExprLogic      go to state 115
    ExprCompare    go to state 116
    ExprOperators  go to state 117


State 137

   58 Expr: Expr . ExprLogic Expr
   59     | Expr . ExprCompare Expr
   59     | Expr ExprCompare Expr .
   60     | Expr . ExprOperators Expr

    AND    shift, and go to state 102
    OR     shift, and go to state 103
    LT     shift, and go to state 104
    GT     shift, and go to state 105
    EQ     shift, and go to state 106
    NEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    GEQ    shift, and go to state 109
    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111
    STAR   shift, and go to state 112
    DIV    shift, and go to state 113
    MOD    shift, and go to state 114

    AND       [reduce using rule 59 (Expr)]
    OR        [reduce using rule 59 (Expr)]
    LT        [reduce using rule 59 (Expr)]
    GT        [reduce using rule 59 (Expr)]
    EQ        [reduce using rule 59 (Expr)]
    NEQ       [reduce using rule 59 (Expr)]
    LEQ       [reduce using rule 59 (Expr)]
    GEQ       [reduce using rule 59 (Expr)]
    PLUS      [reduce using rule 59 (Expr)]
    MINUS     [reduce using rule 59 (Expr)]
    STAR      [reduce using rule 59 (Expr)]
    DIV       [reduce using rule 59 (Expr)]
    MOD       [reduce using rule 59 (Expr)]
    $default  reduce using rule 59 (Expr)

    ExprLogic      go to state 115
    ExprCompare    go to state 116
    ExprOperators  go to state 117


State 138

   58 Expr: Expr . ExprLogic Expr
   59     | Expr . ExprCompare Expr
   60     | Expr . ExprOperators Expr
   60     | Expr ExprOperators Expr .

    AND    shift, and go to state 102
    OR     shift, and go to state 103
    LT     shift, and go to state 104
    GT     shift, and go to state 105
    EQ     shift, and go to state 106
    NEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    GEQ    shift, and go to state 109
    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111
    STAR   shift, and go to state 112
    DIV    shift, and go to state 113
    MOD    shift, and go to state 114

    AND       [reduce using rule 60 (Expr)]
    OR        [reduce using rule 60 (Expr)]
    LT        [reduce using rule 60 (Expr)]
    GT        [reduce using rule 60 (Expr)]
    EQ        [reduce using rule 60 (Expr)]
    NEQ       [reduce using rule 60 (Expr)]
    LEQ       [reduce using rule 60 (Expr)]
    GEQ       [reduce using rule 60 (Expr)]
    PLUS      [reduce using rule 60 (Expr)]
    MINUS     [reduce using rule 60 (Expr)]
    STAR      [reduce using rule 60 (Expr)]
    DIV       [reduce using rule 60 (Expr)]
    MOD       [reduce using rule 60 (Expr)]
    $default  reduce using rule 60 (Expr)

    ExprLogic      go to state 115
    ExprCompare    go to state 116
    ExprOperators  go to state 117


State 139

   33 Statement: WHILE OCURV Expr CCURV . Statement

    error     shift, and go to state 35
    DO        shift, and go to state 36
    IF        shift, and go to state 37
    PARSEINT  shift, and go to state 38
    PRINT     shift, and go to state 39
    RETURN    shift, and go to state 40
    WHILE     shift, and go to state 41
    OBRACE    shift, and go to state 42
    ID        shift, and go to state 44

    SEMI  reduce using rule 45 (StatementAux)

    Statement         go to state 149
    StatementAux      go to state 49
    StatementL        go to state 50
    Assignment        go to state 51
    MethodInvocation  go to state 52
    ParseArgs         go to state 53


State 140

   50 MethodInvocation: ID OCURV MethodInvAux CCURV .

    $default  reduce using rule 50 (MethodInvocation)


State 141

   51 MethodInvAux: Expr CommaExpr .
   53 CommaExpr: CommaExpr . COMMA Expr

    COMMA  shift, and go to state 150

    $default  reduce using rule 51 (MethodInvAux)


State 142

   26 VarDecl: Type ID CommaId SEMI .

    $default  reduce using rule 26 (VarDecl)


State 143

   19 FormalParamsAux: COMMA Type ID . FormalParamsAux

    COMMA  shift, and go to state 89

    $default  reduce using rule 20 (FormalParamsAux)

    FormalParamsAux  go to state 151


State 144

   34 Statement: DO Statement WHILE OCURV Expr . CCURV SEMI
   58 Expr: Expr . ExprLogic Expr
   59     | Expr . ExprCompare Expr
   60     | Expr . ExprOperators Expr

    CCURV  shift, and go to state 152
    AND    shift, and go to state 102
    OR     shift, and go to state 103
    LT     shift, and go to state 104
    GT     shift, and go to state 105
    EQ     shift, and go to state 106
    NEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    GEQ    shift, and go to state 109
    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111
    STAR   shift, and go to state 112
    DIV    shift, and go to state 113
    MOD    shift, and go to state 114

    ExprLogic      go to state 115
    ExprCompare    go to state 116
    ExprOperators  go to state 117


State 145

   31 Statement: IF OCURV Expr CCURV Statement .
   32          | IF OCURV Expr CCURV Statement . ELSE Statement

    ELSE  shift, and go to state 153

    $default  reduce using rule 31 (Statement)


State 146

   55 ParseArgs: PARSEINT OCURV ID OSQUARE Expr . CSQUARE CCURV
   58 Expr: Expr . ExprLogic Expr
   59     | Expr . ExprCompare Expr
   60     | Expr . ExprOperators Expr

    CSQUARE  shift, and go to state 154
    AND      shift, and go to state 102
    OR       shift, and go to state 103
    LT       shift, and go to state 104
    GT       shift, and go to state 105
    EQ       shift, and go to state 106
    NEQ      shift, and go to state 107
    LEQ      shift, and go to state 108
    GEQ      shift, and go to state 109
    PLUS     shift, and go to state 110
    MINUS    shift, and go to state 111
    STAR     shift, and go to state 112
    DIV      shift, and go to state 113
    MOD      shift, and go to state 114

    ExprLogic      go to state 115
    ExprCompare    go to state 116
    ExprOperators  go to state 117


State 147

   36 Statement: PRINT OCURV STRLIT CCURV SEMI .

    $default  reduce using rule 36 (Statement)


State 148

   35 Statement: PRINT OCURV Expr CCURV SEMI .

    $default  reduce using rule 35 (Statement)


State 149

   33 Statement: WHILE OCURV Expr CCURV Statement .

    $default  reduce using rule 33 (Statement)


State 150

   53 CommaExpr: CommaExpr COMMA . Expr

    BOOLLIT   shift, and go to state 66
    PARSEINT  shift, and go to state 38
    OCURV     shift, and go to state 67
    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69
    NOT       shift, and go to state 70
    ID        shift, and go to state 71
    DECLIT    shift, and go to state 72
    REALLIT   shift, and go to state 73

    StatementL        go to state 75
    Assignment        go to state 51
    MethodInvocation  go to state 52
    ParseArgs         go to state 53
    Expr              go to state 155
    ExprLit           go to state 77
    ExprSign          go to state 78


State 151

   19 FormalParamsAux: COMMA Type ID FormalParamsAux .

    $default  reduce using rule 19 (FormalParamsAux)


State 152

   34 Statement: DO Statement WHILE OCURV Expr CCURV . SEMI

    SEMI  shift, and go to state 156


State 153

   32 Statement: IF OCURV Expr CCURV Statement ELSE . Statement

    error     shift, and go to state 35
    DO        shift, and go to state 36
    IF        shift, and go to state 37
    PARSEINT  shift, and go to state 38
    PRINT     shift, and go to state 39
    RETURN    shift, and go to state 40
    WHILE     shift, and go to state 41
    OBRACE    shift, and go to state 42
    ID        shift, and go to state 44

    SEMI  reduce using rule 45 (StatementAux)

    Statement         go to state 157
    StatementAux      go to state 49
    StatementL        go to state 50
    Assignment        go to state 51
    MethodInvocation  go to state 52
    ParseArgs         go to state 53


State 154

   55 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE . CCURV

    CCURV  shift, and go to state 158


State 155

   53 CommaExpr: CommaExpr COMMA Expr .
   58 Expr: Expr . ExprLogic Expr
   59     | Expr . ExprCompare Expr
   60     | Expr . ExprOperators Expr

    AND    shift, and go to state 102
    OR     shift, and go to state 103
    LT     shift, and go to state 104
    GT     shift, and go to state 105
    EQ     shift, and go to state 106
    NEQ    shift, and go to state 107
    LEQ    shift, and go to state 108
    GEQ    shift, and go to state 109
    PLUS   shift, and go to state 110
    MINUS  shift, and go to state 111
    STAR   shift, and go to state 112
    DIV    shift, and go to state 113
    MOD    shift, and go to state 114

    $default  reduce using rule 53 (CommaExpr)

    ExprLogic      go to state 115
    ExprCompare    go to state 116
    ExprOperators  go to state 117


State 156

   34 Statement: DO Statement WHILE OCURV Expr CCURV SEMI .

    $default  reduce using rule 34 (Statement)


State 157

   32 Statement: IF OCURV Expr CCURV Statement ELSE Statement .

    $default  reduce using rule 32 (Statement)


State 158

   55 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE CCURV .

    $default  reduce using rule 55 (ParseArgs)
